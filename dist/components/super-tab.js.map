{"version":3,"file":"super-tab.js","sourceRoot":"","sources":["../../src/components/super-tab.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ElementRef,\r\n  ErrorHandler,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  App,\r\n  Config,\r\n  DeepLinker,\r\n  DomController,\r\n  GestureController,\r\n  NavControllerBase,\r\n  NavOptions,\r\n  Platform,\r\n  ViewController,\r\n} from 'ionic-angular';\r\nimport { TransitionController } from 'ionic-angular/transitions/transition-controller';\r\n\r\nimport { SuperTabsComponent } from './super-tabs';\r\n\r\n@Component({\r\n  selector: 'super-tab',\r\n  template: '<div #viewport></div><div class=\"nav-decor\"></div>',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SuperTabComponent extends NavControllerBase implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  /**\r\n   * Title of the tab\r\n   */\r\n  @Input()\r\n  title: string;\r\n\r\n  // TODO find less hacky approach\r\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\r\n  get tabTitle() {\r\n    return this.title;\r\n  }\r\n\r\n  // needed to make Ionic Framework think this is a tabs component... needed for Deeplinking\r\n  get index() {\r\n    return this.parent.getTabIndexById(this.tabId);\r\n  }\r\n\r\n  /**\r\n   * Name of the ionicon to use\r\n   */\r\n  @Input()\r\n  icon: string;\r\n\r\n  /**\r\n   * @input {Page} Set the root page for this tab.\r\n   */\r\n  @Input() root: any;\r\n\r\n  private _rootParams: any;\r\n  rootNavCtrl: NavControllerBase;\r\n\r\n  /**\r\n   * @input {object} Any nav-params to pass to the root page of this tab.\r\n   */\r\n  @Input()\r\n  set rootParams(params: any) {\r\n    params.rootNavCtrl = this.rootNavCtrl;\r\n    this._rootParams = params;\r\n  }\r\n\r\n  get rootParams(): any {\r\n    return this._rootParams;\r\n  }\r\n\r\n  @Input('id')\r\n  tabId: string;\r\n\r\n  get _tabId() {\r\n    return this.tabId;\r\n  }\r\n\r\n  /**\r\n   * Badge value\r\n   * @type {Number}\r\n   */\r\n  @Input()\r\n  badge: number;\r\n\r\n\r\n  /**\r\n   * Enable/disable swipe to go back for iOS\r\n   * @return {boolean}\r\n   */\r\n  @Input()\r\n  get swipeBackEnabled(): boolean {\r\n    return this._sbEnabled;\r\n  }\r\n\r\n  set swipeBackEnabled(val: boolean) {\r\n    this._sbEnabled = Boolean(val);\r\n    this._swipeBackCheck();\r\n  }\r\n\r\n  /**\r\n   * @hidden\r\n   */\r\n  @ViewChild('viewport', { read: ViewContainerRef })\r\n  set _vp(val: ViewContainerRef) {\r\n    this.setViewport(val);\r\n  }\r\n\r\n  /**\r\n   * Indicates whether the tab has been loaded\r\n   * @type {boolean}\r\n   */\r\n  private loaded = false;\r\n\r\n  /**\r\n   * A promise that resolves when the component has initialized\r\n   */\r\n  private init: Promise<any>;\r\n\r\n  /**\r\n   * Function to call to resolve the init promise\r\n   */\r\n  private initResolve: Function;\r\n\r\n  constructor(parent: SuperTabsComponent,\r\n              app: App,\r\n              config: Config,\r\n              plt: Platform,\r\n              el: ElementRef,\r\n              zone: NgZone,\r\n              rnd: Renderer,\r\n              cfr: ComponentFactoryResolver,\r\n              gestureCtrl: GestureController,\r\n              transCtrl: TransitionController,\r\n              errorHandler: ErrorHandler,\r\n              @Optional() private linker: DeepLinker,\r\n              private _dom: DomController,\r\n              private cd: ChangeDetectorRef) {\r\n    super(parent, app, config, plt, el, zone, rnd, cfr, gestureCtrl, transCtrl, linker, _dom, errorHandler);\r\n    this.init = new Promise<void>(resolve => this.initResolve = resolve);\r\n  }\r\n\r\n  _didEnter(view: ViewController) {\r\n    if (this.loaded) {\r\n      super._didEnter(view);\r\n    }\r\n  }\r\n\r\n  _willEnter(view: ViewController) {\r\n    if (this.loaded) {\r\n      super._willEnter(view);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.parent.addTab(this);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initResolve();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy();\r\n  }\r\n\r\n  setActive(active: boolean) {\r\n    if (active) {\r\n      this.cd.reattach();\r\n      this.cd.detectChanges();\r\n    } else if (!active) {\r\n      this.cd.detach();\r\n    }\r\n  }\r\n\r\n  async load(load: boolean) {\r\n    if (load && !this.loaded) {\r\n      await this.init;\r\n      await this.setRoot(this.root, this.rootParams, { animate: false });\r\n      this.loaded = true;\r\n    }\r\n  }\r\n\r\n  setBadge(value: number) {\r\n    this.badge = value;\r\n  }\r\n\r\n  clearBadge() {\r\n    delete this.badge;\r\n  }\r\n\r\n  increaseBadge(increaseBy: number = 1) {\r\n    this.badge += increaseBy;\r\n  }\r\n\r\n  decreaseBadge(decreaseBy: number = 1) {\r\n    this.badge = Math.max(0, this.badge - decreaseBy);\r\n  }\r\n\r\n  setWidth(width: number) {\r\n    this.setElementStyle('width', width + 'px');\r\n  }\r\n\r\n  goToRoot(opts: NavOptions): Promise<any> {\r\n    return this.setRoot(this.root, this.rootParams, opts, null);\r\n  }\r\n\r\n}\r\n"]}